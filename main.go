package main

import (
	"fmt"
	"os/exec"
	"time"
	"strings"
)

func main() {

	updateSubmodule()
	currentYear := fmt.Sprint(time.Now().Year())
	getCVEs(currentYear)
}

func updateSubmodule() bool {
	cmd := exec.Command("git", "submodule", "update")
	stdout, err := cmd.Output()

	if err != nil {
		fmt.Println(err)
	}

	output := string(stdout)

	if output != "" {
		fmt.Println(output)
		return false
	}

	return true
}

func getCVEVariants(path string, variant string, categories []string) []string {
	// TODO: check using path, iterate and snatch up each group of CVEs by variant
	fmt.Printf("Variant: %s\nPath: %s\n", variant, path)
	categories = append(categories, variant)
	return categories
}

func getCVEs(year string) {
	cveVariantsPath := fmt.Sprintf("cvelistV5/cves/%s/", year)
	ls := exec.Command("ls", cveVariantsPath)
	stdout, err := ls.Output()
	output := string(stdout)

	if err != nil {
		fmt.Println("Error: ", err)
	}

	cveVariants := strings.Split(output, "\n")
	var categories []string

	for _, variant := range cveVariants {
		categories = getCVEVariants(cveVariantsPath, variant, categories)
	}

	fmt.Println(categories)
}
